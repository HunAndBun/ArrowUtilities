<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArrowUtilities</name>
    </assembly>
    <members>
        <member name="T:ArrowUtilities.Mathematics.EnumerableHelpers">
            <summary>
            <para>Static class containing extension methods for implementors of the generic IEnumerable such as List or Array.</para>
            </summary>
        </member>
        <member name="M:ArrowUtilities.Mathematics.EnumerableHelpers.GetAlphabet">
            <summary>
            <para>Shortcut for adding all 26 letters of the alphabet to an array. (Utilized in RNG.Letter)</para>
            </summary>
            <returns>Char[] with all 26 letters of the alphabet.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.EnumerableHelpers.GetDigits">
            <summary>
            <para>Shortcut for adding all 10 digits to an array. (Utilized in RNG.Digit)</para>
            </summary>
            <returns>Char[] with all 10 numeric digits.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.EnumerableHelpers.GetAlphanumerics">
            <summary>
            <para>Shortcut for adding all 36 alphanumeric characters to an array.</para>
            </summary>
            <returns>Char[] with all 36 alphanumeric characters.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.EnumerableHelpers.GetPreFilledArray``1(System.Int32,``0)">
            <summary>
            <para>Generic function for initializing an array with the contents filled with a single value.</para>
            </summary>
            <param name="length">Number of entries on resulting array.</param>
            <param name="fill">Object or value to fill every entry with.</param>
            <typeparam name="T">Type of value or reference being stored.</typeparam>
            <returns>Array with the same entry at every index.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.EnumerableHelpers.Randomize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            <para>Generic helper function for implementors of generic IEnumerable that takes in an IEnumerable, and outputs a randomized version
            <b><br/>WARNING: This duplicates the enumerable! Avoid using in loops or performance-critical contexts.</b></para>
            </summary>
            <param name="enumerable">The IEnumerable to randomize.</param>
            <typeparam name="T">The type of object enumerated.</typeparam>
            <returns>A new IEnumerable with randomized entries.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.EnumerableHelpers.GetRandomEntry``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            <para>Generic helper function for IEnumerable that takes in a collection, and outputs a random entry.</para>
            </summary>
            <param name="enumerable">The collection to randomly draw from.</param>
            <typeparam name="T">The type of object listed.</typeparam>
            <returns>A random entry from the collection.</returns>
        </member>
        <member name="T:ArrowUtilities.Mathematics.RNG">
            <summary>
            <para>Tools to assist with randomized mechanics</para>
            </summary>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.Chance(System.Single)">
            <summary>
            <para>A basic random boolean generator with customized win percentage</para>
            </summary>
            <param name="zeroToOne">Percent chance of success (0.35 = 35%)</param>
            <returns>True if the result is within the set percentage</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.FiftyFifty">
            <summary>
            <para>Boolean generator based on a random value compared against 0.5f</para>
            </summary>
            <returns>True if the value is within the 0.5f tolerance</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.DiceRoll(System.Int32)">
            <summary>
            <para>Returns an integer between 1 and the number of sides provided. <br/><b>Note: values less than '1' will always return '-1.'</b></para>
            </summary>
            <param name="sides"></param>
            <returns></returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.CoinFlipInt">
            <summary>
            <para>Flips a coin</para>
            </summary>
            <returns>Integer result of the toss (0 or 1)</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.CoinFlip">
            <summary>
            <para>Flips a coin</para>
            </summary>
            <returns>String result of the toss (Heads or Tails)</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.D4">
            <summary>
            <para>Rolls a 4-sided die</para>
            </summary>
            <returns>Integer result of the roll</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.D6">
            <summary>
            <para>Rolls a 6-sided die</para>
            </summary>
            <returns>Integer result of the roll</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.D10">
            <summary>
            <para>Rolls a 10-sided die</para>
            </summary>
            <returns>Integer result of the roll</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.D12">
            <summary>
            <para>Rolls a 12-sided die</para>
            </summary>
            <returns>Integer result of the roll</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.D20">
            <summary>
            <para>Rolls a 20-sided die</para>
            </summary>
            <returns>Integer result of the roll</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.UnityColor">
            <summary>
            <para>Gets a random color from the Unity color presets.</para>
            </summary>
            <returns>Black, Blue, Cyan, Gray, Green, Magenta, Red, White, or Yellow</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.Color">
            <summary>
            <para>Gets a random color using randomized R, G, and B values.
            <br/><b>Note: Use RNG.UnityColor to get only the preset color options.</b></para>
            </summary>
            <returns>Randomized color. <br/>(Alpha is always set to 1.)</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.Letter">
            <summary>
            <para>Randomly retrieves a letter from A to Z.</para>
            </summary>
            <returns>Any letter from A to Z.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.Digit">
            <summary>
            <para>Randomly retrieves a digit from 0 to 9.</para>
            </summary>
            <returns>Any digit from 0 to 9 as a Char.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.Alphanumeric">
            <summary>
            Randomly retrieves a letter or digit from A to Z or 0 to 9 respectively.
            </summary>
            <returns>Any alphanumeric from A to Z or 0 to 9.</returns>
        </member>
        <member name="M:ArrowUtilities.Mathematics.RNG.GetReferenceToRandom">
            <summary>
            <para>Gets or creates a static instance of System.Random through null-coalescing assignment.</para>
            </summary>
            <returns>Static instance of System.Random()</returns>
        </member>
        <member name="T:ArrowUtilities.Optimization.MethodSpeedTester">
            <summary>
            
            </summary>
        </member>
        <member name="M:ArrowUtilities.Optimization.MethodSpeedTester.TestSingleAction(System.Action,System.Int32)">
            <summary>
            <para>Simple Stopwatch-based test for execution speed of an Action over a given number of iterations.</para>
            </summary>
            <param name="action">Action you want to test.</param>
            <param name="iterations">How many times the Action is run during the test.</param>
        </member>
        <member name="M:ArrowUtilities.Optimization.MethodSpeedTester.CompareActions(System.Action,System.Action,System.Int32)">
            <summary>
            <para>Coroutine for testing two Actions and comparing how fast they execute over a given number of iterations.
            <br/><b>Note: You must run this using StartCoroutine from a MonoBehaviour!</b></para>
            </summary>
            <param name="action1">Action that will be tested first</param>
            <param name="action2">Action that will be tested second</param>
            <param name="iterations">How many times each Action is run during the test.</param>
            <returns></returns>
        </member>
        <member name="T:ArrowUtilities.Optimization.WaitFor">
            <summary>
            <para>A static helper class for efficient generation and use of the WaitForSeconds object.</para>
            </summary>
        </member>
        <member name="M:ArrowUtilities.Optimization.WaitFor.Seconds(System.Single)">
            <summary>
            <para>Accessor for a Dictionary of WaitForSeconds objects, allowing for seamless caching of WaitForSeconds without the need of declaring it in your own script.</para>
            </summary>
            <param name="seconds">Number of seconds to yield.</param>
            <returns>WaitForSeconds object from Dictionary</returns>
        </member>
        <member name="M:ArrowUtilities.Optimization.WaitFor.Minutes(System.Single)">
            <summary>
            <para>Accessor for a Dictionary of WaitForSeconds objects, allowing for seamless caching of WaitForSeconds without the need of declaring it in your own script.</para>
            </summary>
            <param name="minutes">Number of minutes to yield. (Multiplied by 60 for the WaitForSeconds object)</param>
            <returns>WaitForSeconds object from Dictionary</returns>
        </member>
        <member name="T:ArrowUtilities.Serialization.SerializableVectorHelpers">
            <summary>
            <para>Static class containing serializable versions of the UnityEngine 'Vector' family of structs.</para>
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.SerializableVectorHelpers.ToSerializable(UnityEngine.Vector2)">
            <summary>
            <para>Method for easily prepping Vector2 structs for JSON serialization.
            <br/><b>Note: The same can be done in reverse with ".ToVector2()"</b></para>
            </summary>
            <param name="vector2">Vector to serialize</param>
            <returns>The same vector in a form that is more easily converted by serialization methods.</returns>
        </member>
        <member name="M:ArrowUtilities.Serialization.SerializableVectorHelpers.ToSerializable(UnityEngine.Vector2Int)">
            <summary>
            <para>Method for easily prepping Vector2Int structs for JSON serialization.
            <br/><b>Note: The same can be done in reverse with ".ToVector2Int()"</b></para>
            </summary>
            <param name="vector2Int">Vector to serialize</param>
            <returns>The same vector in a form that is more easily converted by serialization methods.</returns>
        </member>
        <member name="M:ArrowUtilities.Serialization.SerializableVectorHelpers.ToSerializable(UnityEngine.Vector3)">
            <summary>
            <para>Method for easily prepping Vector3 structs for JSON serialization.
            <br/><b>Note: The same can be done in reverse with ".ToVector3()"</b></para>
            </summary>
            <param name="vector3">Vector to serialize</param>
            <returns>The same vector in a form that is more easily converted by serialization methods.</returns>
        </member>
        <member name="M:ArrowUtilities.Serialization.SerializableVectorHelpers.ToSerializable(UnityEngine.Vector3Int)">
            <summary>
            <para>Method for easily prepping Vector3Int structs for JSON serialization.
            <br/><b>Note: The same can be done in reverse with ".ToVector3Int()"</b></para>
            </summary>
            <param name="vector3Int">Vector to serialize</param>
            <returns>The same vector in a form that is more easily converted by serialization methods.</returns>
        </member>
        <member name="M:ArrowUtilities.Serialization.SerializableVectorHelpers.ToSerializable(UnityEngine.Vector4)">
            <summary>
            <para>Method for easily prepping Vector3Int structs for JSON serialization.
            <br/><b>Note: The same can be done in reverse with ".ToVector3Int()"</b></para>
            </summary>
            <param name="vector4">Vector to serialize</param>
            <returns>The same vector in a form that is more easily converted by serialization methods.</returns>
        </member>
        <member name="T:ArrowUtilities.Serialization.Vector2Serializable">
            <summary>
            <para>Simpler Vector2 class for serialization to JSON</para>
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector2Serializable.x">
            <summary>
            X component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector2Serializable.y">
            <summary>
            Y component of the vector.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2Serializable.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a serializable vector with given x,y components.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2Serializable.#ctor(UnityEngine.Vector2)">
            <summary>
            Constructs a serializable vector with given Vector2.
            </summary>            
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2Serializable.#ctor(UnityEngine.Vector3)">
            <summary>
            Constructs a serializable vector with given Vector3. 'z' value is discarded.
            </summary>           
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2Serializable.ToVector2">
            <summary>
            <para>Method for ease of conversion post-deserialization</para>
            </summary>
            <returns>Original UnityEngine implementation of Vector2</returns>
        </member>
        <member name="T:ArrowUtilities.Serialization.Vector2IntSerializable">
            <summary>
            <para>Simpler Vector2Int class for serialization to JSON</para>
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector2IntSerializable.x">
            <summary>
            X component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector2IntSerializable.y">
            <summary>
            Y component of the vector.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2IntSerializable.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a serializable vector with given x,y components.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2IntSerializable.#ctor(UnityEngine.Vector2Int)">
            <summary>
            Constructs a serializable vector with given Vector2Int.
            </summary>            
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2IntSerializable.#ctor(UnityEngine.Vector3Int)">
            <summary>
            Constructs a serializable vector with given Vector3Int. 'z' value is discarded.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector2IntSerializable.ToVector2Int">
            <summary>
            <para>Method for ease of conversion post-deserialization</para>
            </summary>
            <returns>Original UnityEngine implementation of Vector2Int</returns>
        </member>
        <member name="T:ArrowUtilities.Serialization.Vector3Serializable">
            <summary>
            <para>Simpler Vector3 class for serialization to JSON</para>
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector3Serializable.x">
            <summary>
            X component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector3Serializable.y">
            <summary>
            Y component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector3Serializable.z">
            <summary>
            Z component of the vector.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3Serializable.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a serializable vector with given x,y,z components.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3Serializable.#ctor(UnityEngine.Vector3)">
            <summary>
            Constructs a serializable vector with given Vector3.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3Serializable.#ctor(UnityEngine.Vector2)">
            <summary>
            Constructs a serializable vector with given Vector2 and sets z to zero.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3Serializable.ToVector3">
            <summary>
            <para>Method for ease of conversion post-deserialization</para>
            </summary>
            <returns>Original UnityEngine implementation of Vector3</returns>
        </member>
        <member name="T:ArrowUtilities.Serialization.Vector3IntSerializable">
            <summary>
            <para>Simpler Vector3Int class for serialization to JSON</para>
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector3IntSerializable.x">
            <summary>
            X component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector3IntSerializable.y">
            <summary>
            Y component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector3IntSerializable.z">
            <summary>
            Z component of the vector.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3IntSerializable.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a serializable vector with given x,y,z components.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3IntSerializable.#ctor(UnityEngine.Vector3Int)">
            <summary>
            Constructs a serializable vector with given Vector3Int.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3IntSerializable.#ctor(UnityEngine.Vector2Int)">
            <summary>
            Constructs a serializable vector with given Vector2Int and sets z to zero.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector3IntSerializable.ToVector3Int">
            <summary>
            <para>Method for ease of conversion post-deserialization</para>
            </summary>
            <returns>Original UnityEngine implementation of Vector3Int</returns>
        </member>
        <member name="T:ArrowUtilities.Serialization.Vector4Serializable">
            <summary>
            <para>Simpler Vector4 class for serialization to JSON</para>
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector4Serializable.x">
            <summary>
            X component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector4Serializable.y">
            <summary>
            Y component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector4Serializable.z">
            <summary>
            Z component of the vector.
            </summary>
        </member>
        <member name="P:ArrowUtilities.Serialization.Vector4Serializable.w">
            <summary>
            W component of the vector.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector4Serializable.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a serializable vector with given x,y,z,w components.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector4Serializable.#ctor(UnityEngine.Vector4)">
            <summary>
            Constructs a serializable vector with given Vector4.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector4Serializable.#ctor(UnityEngine.Vector3)">
            <summary>
            Constructs a serializable vector with given Vector3 and sets w to zero.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector4Serializable.#ctor(UnityEngine.Vector2)">
            <summary>
            Constructs a serializable vector with given Vector2 and sets z and w to zero.
            </summary>
        </member>
        <member name="M:ArrowUtilities.Serialization.Vector4Serializable.ToVector3">
            <summary>
            <para>Method for ease of conversion post-deserialization</para>
            </summary>
            <returns>Original UnityEngine implementation of Vector3</returns>
        </member>
        <member name="T:ArrowUtilities.TilemapTools.TileHelperFunctions">
            <summary>
            <para>Static class containing methods designed to set many tiles at runtime in a performant way.</para>
            </summary>
        </member>
        <member name="M:ArrowUtilities.TilemapTools.TileHelperFunctions.SetSquareOfTiles(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,System.Int32,UnityEngine.Tilemaps.Tile)">
            <summary>
            <para>Helper method for setting a square of tiles all at once.
            <br/><b>Note: This statically caches the values for size and tile, so continuous usage (with the same parameters) remains performant.</b></para>
            </summary>
            <param name="tilemap">The Tilemap asset to set to.</param>
            <param name="bottomLeftCorner">The bottom, leftmost corner of the shape.</param>
            <param name="size">The number of tiles per side.</param>
            <param name="tile">The tile to set.</param>
        </member>
        <member name="M:ArrowUtilities.TilemapTools.TileHelperFunctions.SetRectangleOfTiles(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,System.Int32,System.Int32,UnityEngine.Tilemaps.Tile)">
            <summary>
            <para>Helper method for setting a rectangle of tiles all at once.
            <br/><b>Note: This statically caches the values for size and tile, so continuous usage (with the same parameters) remains performant.</b></para>
            </summary>
            <param name="tilemap">The Tilemap asset to set to.</param>
            <param name="bottomLeftCorner">The bottom, leftmost corner of the shape</param>
            <param name="height">The number of tiles on the y axis</param>
            <param name="width">The number of tiles on the x axis</param>
            <param name="tile">The tile to set.</param>
        </member>
        <member name="M:ArrowUtilities.TilemapTools.TileHelperFunctions.ClearTileHelperCache">
            <summary>
            <para>Nullifies the cached data for the SetSquareOfTiles and SetRectangleOfTiles methods. <br/>
            Use this when either method is no longer being utilized in the scene, and likely will not be used again.</para>
            </summary>
        </member>
    </members>
</doc>
